version: '3.9'

services:
  backend-builder:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./app:/app
      - backend_venv:/app/.venv
      - ./requirements.txt:/app/requirements.txt
    command: >
      /bin/bash -c "
      python -m venv .venv && \
      . .venv/bin/activate && \
      pip install --upgrade pip && \
      pip install -r requirements.txt
      "

  backend:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./app:/app
      - backend_venv:/app/.venv
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    command: >
      /bin/bash -c "
      . .venv/bin/activate && \
      uvicorn main:app --host 0.0.0.0 --port 8000
      "
    depends_on:
      - backend-builder
      - db

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  frontend-builder:
    image: node:18
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
    command: npm install

  frontend:
    image: node:18
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    command: npm run dev
    depends_on:
      - frontend-builder

volumes:
  postgres_data:
  backend_venv:
  frontend_node_modules:
